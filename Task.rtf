{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf400
{\fonttbl\f0\fnil\fcharset0 HelveticaNeue;\f1\fswiss\fcharset0 Helvetica;\f2\fnil\fcharset0 Menlo-Regular;
}
{\colortbl;\red255\green255\blue255;\red53\green53\blue53;\red255\green255\blue255;\red0\green0\blue0;
\red170\green13\blue145;\red92\green38\blue153;\red100\green56\blue32;\red28\green0\blue207;\red0\green116\blue0;
}
{\*\expandedcolortbl;;\cssrgb\c27059\c27059\c27059;\csgray\c100000;\csgenericrgb\c0\c0\c0;
\csgenericrgb\c66500\c5200\c56900;\csgenericrgb\c35900\c14900\c60100;\csgenericrgb\c39100\c22000\c12500;\csgenericrgb\c11000\c0\c81000;\csgenericrgb\c0\c45600\c0;
}
\margl1440\margr1440\vieww9000\viewh8400\viewkind0
\deftab560
\pard\pardeftab560\slleading20\partightenfactor0

\f0\fs24 \cf2 1. UIView -\uc0\u1078 \u1080 \u1079 \u1085 \u1077 \u1085 \u1085 \u1099 \u1081  \u1094 \u1080 \u1082 \u1083  \u1088 \u1072 \u1089 \u1089 \u1084 \u1086 \u1090 \u1088 \u1077 \u1090 \u1100  \u1076 \u1077 \u1090 \u1072 \u1083 \u1100 \u1085 \u1086  \
2. \uc0\u1057 \u1086 \u1079 \u1076 \u1072 \u1090 \u1100  \u1086 \u1073 \u1099 \u1095 \u1085 \u1091 \u1102  \u1074 \u1100 \u1102 \u1093 \u1091  \u1088 \u1091 \u1095 \u1082 \u1072 \u1084 \u1080  - \u1082 \u1086 \u1086 \u1088 \u1076 \u1080 \u1085 \u1072 \u1090 \u1099  \u1076 \u1086 \u1073 \u1072 \u1074 \u1083 \u1103 \u1077 \u1084  \u1095 \u1077 \u1088 \u1077 \u1079  CGRect(\u1085 \u1080 \u1082 \u1072 \u1082 \u1080 \u1093  xib)\
 - \uc0\u1087 \u1086 \u1089 \u1084 \u1086 \u1090 \u1088 \u1077 \u1090 \u1100  \u1082 \u1072 \u1082 \u1080 \u1077  \u1084 \u1077 \u1090 \u1086 \u1076 \u1099  \u1073 \u1091 \u1076 \u1091 \u1090  \u1074 \u1099 \u1079 \u1099 \u1074 \u1072 \u1090 \u1100 \u1089 \u1103 , \u1087 \u1077 \u1088 \u1077 \u1086 \u1087 \u1088 \u1077 \u1076 \u1077 \u1083 \u1080 \u1090 \u1100  \u1074 \u1100 \u1102 \u1093 \u1091  - \u1089 \u1086 \u1079 \u1076 \u1072 \u1090 \u1100  \u1089 \u1074 \u1086 \u1102  \u1085 \u1072 \u1089 \u1083 \u1077 \u1076 \u1091 \u1077 \u1084 \u1091 \u1102 ,\
 \uc0\u1074  \u1085 \u1077 \u1081  \u1087 \u1077 \u1088 \u1077 \u1086 \u1087 \u1088 \u1077 \u1076 \u1077 \u1083 \u1080 \u1090 \u1100  \u1101 \u1090 \u1080  \u1084 \u1077 \u1090 \u1086 \u1076 \u1099  - \u1087 \u1086 \u1089 \u1090 \u1072 \u1074 \u1080 \u1090 \u1100  NSLog, \u1074 \u1099 \u1079 \u1099 \u1074 \u1072 \u1077 \u1084  \u1089  \u1087 \u1086 \u1084 \u1086 \u1097 \u1100 \u1102  super. \
3. \uc0\u1044 \u1086 \u1073 \u1072 \u1074 \u1080 \u1090 \u1100   xib - \u1087 \u1086 \u1087 \u1088 \u1086 \u1073 \u1086 \u1074 \u1072 \u1090 \u1100  \u1079 \u1072 \u1075 \u1088 \u1091 \u1079 \u1080 \u1090 \u1100  \u1080 \u1079  \u1085 \u1077 \u1075 \u1086  \u1095 \u1090 \u1086 -\u1085 \u1080 \u1090 \u1100 . \
4. \uc0\u1055 \u1077 \u1088 \u1077 \u1086 \u1087 \u1088 \u1077 \u1076 \u1077 \u1083 \u1080 \u1090 \u1100  CALayer \u1091  \u1085 \u1072 \u1096 \u1077 \u1081  \u1074 \u1100 \u1102 \u1093 \u1080 (+ \u1084 \u1077 \u1090 \u1086 \u1076  layer) - \
\uc0\u1089 \u1076 \u1077 \u1083 \u1072 \u1090 \u1100  \u1076 \u1088 \u1091 \u1075 \u1086 \u1081  backgroundcolor - \u1085 \u1077  \u1079 \u1072 \u1073 \u1099 \u1074 \u1072 \u1103  \u1087 \u1088 \u1086  \u1088 \u1072 \u1079 \u1085 \u1091 \u1102  \u1088 \u1072 \u1073 \u1086 \u1090 \u1091  \u1094 \u1074 \u1077 \u1090 \u1072  \u1091  \
\uc0\u1074 \u1100 \u1102  \u1080  \u1089 \u1083 \u1086 \u1103  (\u1077 \u1075 \u1086  \u1086 \u1087 \u1088 \u1077 \u1076 \u1077 \u1083 \u1077 \u1085 \u1080 \u1077 ) - \u1085 \u1091 \u1078 \u1085 \u1086  \u1082 \u1086 \u1085 \u1074 \u1077 \u1088 \u1090 \u1085 \u1091 \u1090 \u1100  \u1089  UIColor\
\
UIWindow - \uc0\u1087 \u1086 \u1089 \u1084 \u1086 \u1090 \u1088 \u1077 \u1090 \u1100  UIAplication Delegate\
\uc0\u1055 \u1086 \u1087 \u1088 \u1086 \u1073 \u1086 \u1074 \u1072 \u1090 \u1100  \u1087 \u1077 \u1088 \u1077 \u1086 \u1087 \u1088 \u1077 \u1076 \u1077 \u1083 \u1080 \u1090 \u1100  window with touch methods\
\uc0\u1082 \u1072 \u1082  \u1073 \u1099  \u1074 \u1089 \u1077 )\
\
\
\
\
\
\
// from UIView some methods\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f1 \cf0 \cb3 \
\
\
\
\pard\tx543\pardeftab543\pardirnatural\partightenfactor0

\f2\fs22 \cf4 - (\cf5 instancetype\cf4 )initWithFrame:(\cf6 CGRect\cf4 )frame \cf7 NS_DESIGNATED_INITIALIZER\cf4 ;
\f1\fs24 \cf0 \

\f2\fs22 \cf4 - (\cf5 nullable\cf4  \cf5 instancetype\cf4 )initWithCoder:(\cf6 NSCoder\cf4  *)aDecoder \cf7 NS_DESIGNATED_INITIALIZER\cf4 ;
\f1\fs24 \cf0 \
\

\f2\fs22 \cf4 + (\cf6 UIUserInterfaceLayoutDirection\cf4 )userInterfaceLayoutDirectionForSemanticContentAttribute:(\cf6 UISemanticContentAttribute\cf4 )attribute \cf7 NS_AVAILABLE_IOS\cf4 (\cf8 9\cf4 _0);
\f1\fs24 \cf0 \
\
\

\f2\fs22 \cf4 + (\cf6 UIUserInterfaceLayoutDirection\cf4 )userInterfaceLayoutDirectionForSemanticContentAttribute:(\cf6 UISemanticContentAttribute\cf4 )semanticContentAttribute relativeToLayoutDirection:(\cf6 UIUserInterfaceLayoutDirection\cf4 )layoutDirection \cf7 NS_AVAILABLE_IOS\cf4 (\cf8 10\cf4 _0);
\f1\fs24 \cf0 \
\

\f2\fs22 \cf4 - (\cf5 nullable\cf4  \cf6 UIView\cf4  *)hitTest:(\cf6 CGPoint\cf4 )point withEvent:(\cf5 nullable\cf4  \cf6 UIEvent\cf4  *)event;   \cf9 // recursively calls -pointInside:withEvent:. point is in the receiver's coordinate system
\f1\fs24 \cf0 \

\f2\fs22 \cf4 - (\cf5 BOOL\cf4 )pointInside:(\cf6 CGPoint\cf4 )point withEvent:(\cf5 nullable\cf4  \cf6 UIEvent\cf4  *)event;   \cf9 // default returns YES if point is in bounds
\f1\fs24 \cf0 \
\

\f2\fs22 \cf4 - (\cf6 CGPoint\cf4 )convertPoint:(\cf6 CGPoint\cf4 )point toView:(\cf5 nullable\cf4  \cf6 UIView\cf4  *)view;
\f1\fs24 \cf0 \

\f2\fs22 \cf4 - (\cf6 CGPoint\cf4 )convertPoint:(\cf6 CGPoint\cf4 )point fromView:(\cf5 nullable\cf4  \cf6 UIView\cf4  *)view;
\f1\fs24 \cf0 \

\f2\fs22 \cf4 - (\cf6 CGRect\cf4 )convertRect:(\cf6 CGRect\cf4 )rect toView:(\cf5 nullable\cf4  \cf6 UIView\cf4  *)view;
\f1\fs24 \cf0 \

\f2\fs22 \cf4 - (\cf6 CGRect\cf4 )convertRect:(\cf6 CGRect\cf4 )rect fromView:(\cf5 nullable\cf4  \cf6 UIView\cf4  *)view;
\f1\fs24 \cf0 \

\f2\fs22 \cf4 - (\cf6 CGSize\cf4 )sizeThatFits:(\cf6 CGSize\cf4 )size;     \cf9 // return 'best' size to fit given size. does not actually resize view. Default is return existing view size
\f1\fs24 \cf0 \

\f2\fs22 \cf4 - (\cf5 void\cf4 )sizeToFit;                       \cf9 // calls sizeThatFits: with current view bounds and changes bounds size.
\f1\fs24 \cf0 \

\f2\fs22 \cf4 - (\cf5 void\cf4 )removeFromSuperview;
\f1\fs24 \cf0 \

\f2\fs22 \cf4 - (\cf5 void\cf4 )insertSubview:(\cf6 UIView\cf4  *)view atIndex:(\cf6 NSInteger\cf4 )index;
\f1\fs24 \cf0 \

\f2\fs22 \cf4 - (\cf5 void\cf4 )exchangeSubviewAtIndex:(\cf6 NSInteger\cf4 )index1 withSubviewAtIndex:(\cf6 NSInteger\cf4 )index2;
\f1\fs24 \cf0 \
\

\f2\fs22 \cf4 - (\cf5 void\cf4 )addSubview:(\cf6 UIView\cf4  *)view;
\f1\fs24 \cf0 \

\f2\fs22 \cf4 - (\cf5 void\cf4 )insertSubview:(\cf6 UIView\cf4  *)view belowSubview:(\cf6 UIView\cf4  *)siblingSubview;
\f1\fs24 \cf0 \

\f2\fs22 \cf4 - (\cf5 void\cf4 )insertSubview:(\cf6 UIView\cf4  *)view aboveSubview:(\cf6 UIView\cf4  *)siblingSubview;
\f1\fs24 \cf0 \
\

\f2\fs22 \cf4 - (\cf5 void\cf4 )bringSubviewToFront:(\cf6 UIView\cf4  *)view;
\f1\fs24 \cf0 \

\f2\fs22 \cf4 - (\cf5 void\cf4 )sendSubviewToBack:(\cf6 UIView\cf4  *)view;
\f1\fs24 \cf0 \
\

\f2\fs22 \cf4 - (\cf5 void\cf4 )didAddSubview:(\cf6 UIView\cf4  *)subview;
\f1\fs24 \cf0 \

\f2\fs22 \cf4 - (\cf5 void\cf4 )willRemoveSubview:(\cf6 UIView\cf4  *)subview;
\f1\fs24 \cf0 \
\

\f2\fs22 \cf4 - (\cf5 void\cf4 )willMoveToSuperview:(\cf5 nullable\cf4  \cf6 UIView\cf4  *)newSuperview;
\f1\fs24 \cf0 \

\f2\fs22 \cf4 - (\cf5 void\cf4 )didMoveToSuperview;
\f1\fs24 \cf0 \

\f2\fs22 \cf4 - (\cf5 void\cf4 )willMoveToWindow:(\cf5 nullable\cf4  \cf6 UIWindow\cf4  *)newWindow;
\f1\fs24 \cf0 \

\f2\fs22 \cf4 - (\cf5 void\cf4 )didMoveToWindow;
\f1\fs24 \cf0 \
\

\f2\fs22 \cf4 - (\cf5 BOOL\cf4 )isDescendantOfView:(\cf6 UIView\cf4  *)view;  \cf9 // returns YES for self.
\f1\fs24 \cf0 \

\f2\fs22 \cf4 - (\cf5 nullable\cf4  \cf5 __kindof\cf4  \cf6 UIView\cf4  *)viewWithTag:(\cf6 NSInteger\cf4 )tag; \cf9 // recursive search. includes self
\f1\fs24 \cf0 \
\

\f2\fs22 \cf9 // Allows you to perform layout before the drawing cycle happens. -layoutIfNeeded forces layout early
\f1\fs24 \cf0 \

\f2\fs22 \cf4 - (\cf5 void\cf4 )setNeedsLayout;
\f1\fs24 \cf0 \

\f2\fs22 \cf4 - (\cf5 void\cf4 )layoutIfNeeded;
\f1\fs24 \cf0 \
\

\f2\fs22 \cf4 - (\cf5 void\cf4 )layoutSubviews;
\f1\fs24 \cf0 \

\f2\fs22 \cf4 - (\cf5 void\cf4 )layoutMarginsDidChange \cf7 NS_AVAILABLE_IOS\cf4 (\cf8 8\cf4 _0);
\f1\fs24 \cf0 \
\
\

\f2\fs22 \cf4 - (\cf5 void\cf4 )safeAreaInsetsDidChange \cf7 API_AVAILABLE\cf4 (ios(\cf8 11.0\cf4 ),tvos(\cf8 11.0\cf4 ));
\f1\fs24 \cf0 \
\

\f2\fs22 \cf4 - (\cf5 void\cf4 )setNeedsDisplay;
\f1\fs24 \cf0 \

\f2\fs22 \cf4 - (\cf5 void\cf4 )setNeedsDisplayInRect:(\cf6 CGRect\cf4 )rect;
\f1\fs24 \cf0 \
\

\f2\fs22 \cf4 - (\cf5 void\cf4 )tintColorDidChange \cf7 NS_AVAILABLE_IOS\cf4 (\cf8 7\cf4 _0);
\f1\fs24 \cf0 \
\

\f2\fs22 \cf9 // Installing Constraints
\f1\fs24 \cf0 \
\

\f2\fs22 \cf9 /* A constraint is typically installed on the closest common ancestor of the views involved in the constraint.
\f1\fs24 \cf0 \

\f2\fs22 \cf9  It is required that a constraint be installed on _a_ common ancestor of every view involved.  The numbers in a constraint are interpreted in the coordinate system of the view it is installed on.  A view is considered to be an ancestor of itself.
\f1\fs24 \cf0 \

\f2\fs22 \cf9  */
\f1\fs24 \cf0 \

\f2\fs22 \cf4 - (\cf5 void\cf4 )addConstraint:(\cf6 NSLayoutConstraint\cf4  *)constraint \cf7 NS_AVAILABLE_IOS\cf4 (\cf8 6\cf4 _0); \cf9 // This method will be deprecated in a future release and should be avoided.\'a0 Instead, set NSLayoutConstraint's active property to YES.
\f1\fs24 \cf0 \

\f2\fs22 \cf4 - (\cf5 void\cf4 )addConstraints:(\cf6 NSArray\cf4 <\cf5 __kindof\cf4  \cf6 NSLayoutConstraint\cf4  *> *)constraints \cf7 NS_AVAILABLE_IOS\cf4 (\cf8 6\cf4 _0); \cf9 // This method will be deprecated in a future release and should be avoided.\'a0 Instead use +[NSLayoutConstraint activateConstraints:].
\f1\fs24 \cf0 \

\f2\fs22 \cf4 - (\cf5 void\cf4 )removeConstraint:(\cf6 NSLayoutConstraint\cf4  *)constraint \cf7 NS_AVAILABLE_IOS\cf4 (\cf8 6\cf4 _0); \cf9 // This method will be deprecated in a future release and should be avoided.\'a0 Instead set NSLayoutConstraint's active property to NO.
\f1\fs24 \cf0 \

\f2\fs22 \cf4 - (\cf5 void\cf4 )removeConstraints:(\cf6 NSArray\cf4 <\cf5 __kindof\cf4  \cf6 NSLayoutConstraint\cf4  *> *)constraints \cf7 NS_AVAILABLE_IOS\cf4 (\cf8 6\cf4 _0); \cf9 // This method will be deprecated in a future release and should be avoided.\'a0 Instead use +[NSLayoutConstraint deactivateConstraints:].
\f1\fs24 \cf0 \

\f2\fs22 \cf4 - (\cf5 void\cf4 )updateConstraintsIfNeeded \cf7 NS_AVAILABLE_IOS\cf4 (\cf8 6\cf4 _0); \cf9 // Updates the constraints from the bottom up for the view hierarchy rooted at the receiver. UIWindow's implementation creates a layout engine if necessary first.
\f1\fs24 \cf0 \

\f2\fs22 \cf4 - (\cf5 void\cf4 )updateConstraints \cf7 NS_AVAILABLE_IOS\cf4 (\cf8 6\cf4 _0) \cf7 NS_REQUIRES_SUPER\cf4 ; \cf9 // Override this to adjust your special constraints during a constraints update pass
\f1\fs24 \cf0 \

\f2\fs22 \cf4 - (\cf5 BOOL\cf4 )needsUpdateConstraints \cf7 NS_AVAILABLE_IOS\cf4 (\cf8 6\cf4 _0);
\f1\fs24 \cf0 \

\f2\fs22 \cf4 - (\cf5 void\cf4 )setNeedsUpdateConstraints \cf7 NS_AVAILABLE_IOS\cf4 (\cf8 6\cf4 _0);
\f1\fs24 \cf0 \

\f2\fs22 \cf4 - (\cf6 CGRect\cf4 )alignmentRectForFrame:(\cf6 CGRect\cf4 )frame \cf7 NS_AVAILABLE_IOS\cf4 (\cf8 6\cf4 _0);
\f1\fs24 \cf0 \

\f2\fs22 \cf4 - (\cf6 CGRect\cf4 )frameForAlignmentRect:(\cf6 CGRect\cf4 )alignmentRect \cf7 NS_AVAILABLE_IOS\cf4 (\cf8 6\cf4 _0);
\f1\fs24 \cf0 \

\f2\fs22 \cf4 - (\cf6 CGSize\cf4 )systemLayoutSizeFittingSize:(\cf6 CGSize\cf4 )targetSize \cf7 NS_AVAILABLE_IOS\cf4 (\cf8 6\cf4 _0); \cf9 // Equivalent to sending -
\f1\fs24 \cf0 \
\

\f2\fs22 \cf9 /* UILayoutGuide objects owned by the receiver.
\f1\fs24 \cf0 \

\f2\fs22 \cf9  */
\f1\fs24 \cf0 \
\

\f2\fs22 \cf4 - (\cf5 void\cf4 )addLayoutGuide:(\cf6 UILayoutGuide\cf4  *)layoutGuide \cf7 NS_AVAILABLE_IOS\cf4 (\cf8 9\cf4 _0);
\f1\fs24 \cf0 \
\

\f2\fs22 \cf9 /* Removes layoutGuide from the receiver, passing nil in -setOwningView: to layoutGuide.
\f1\fs24 \cf0 \

\f2\fs22 \cf9  */
\f1\fs24 \cf0 \

\f2\fs22 \cf4 - (\cf5 void\cf4 )removeLayoutGuide:(\cf6 UILayoutGuide\cf4  *)layoutGuide \cf7 NS_AVAILABLE_IOS\cf4 (\cf8 9\cf4 _0);
\f0\fs24 \cf2 \cb1 \
}